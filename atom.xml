<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Steven Sun's Blog]]></title>
  <link href="http://shpeacelover.github.io/atom.xml" rel="self"/>
  <link href="http://shpeacelover.github.io/"/>
  <updated>2014-01-10T20:30:47+08:00</updated>
  <id>http://shpeacelover.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Notes on Perl]]></title>
    <link href="http://shpeacelover.github.io/blog/2014/01/09/notes-on-perl/"/>
    <updated>2014-01-09T21:41:24+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2014/01/09/notes-on-perl</id>
    <content type="html"><![CDATA[<ol>
<li>为了查看某一个模块的版本号， 在命令行下输入以下的内容：
perl -MSome::Module -e &lsquo;print Some::Module->VERSION&rsquo;</li>
<li></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Year Resolution]]></title>
    <link href="http://shpeacelover.github.io/blog/2014/01/09/new-year-resolution/"/>
    <updated>2014-01-09T20:33:07+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2014/01/09/new-year-resolution</id>
    <content type="html"><![CDATA[<p>好久没有对未来做些规划了。 总觉得日子就这样过吧。 也懒得去做些什么大的改变了。</p>

<p>总是在各种技术间跳来跳去， 没有熟练任何一种技术。 玩过Perl， Python， Ruby， Shell Script， PHP， Lisp。 但是真正在公司的服务器上部署过的代码只有用PHP还有Shell Script写的代码。</p>

<p>在我刚来公司的时候， 是想从事perl的代码的编写的工作。 但是自从进入公司后， 自己在Perl上花的时间实在是微乎其微的。</p>

<p>以至于自己都有点迷失方向了， 不知道该给自己立下什么目标。</p>

<p>在自己入职刚一年的时候， manager跟我说， 以后或许可以从事L2方面的工作， 即专职从事代码编写的工作， 当然也得写rule。 前提肯定是自己能证明有能力去做这件事情了。虽然现在自己也有大把的时候可以进行coding， 但是毕竟还是L1. 自己负责的那些PHP代码只有偶尔需要改动。</p>

<p>学了好几天的Catalyst了。 现在我要下定决心把Perl的两个框架给学好， 一个是Catalyst， 一个是Dancer。 这两个框架公司里都有用到的。但是感觉挺难的， 而我的那个L1的同事竟然说Dancer挺容易的。 我是有多蠢啊！！！！</p>

<p>2014年， 希望自己在工作上能够有如下的进步。
1. 在Perl上能稍微有点成绩。 毕竟从知道有perl这门语言到现在都已经有两年多了。 现在还是这么菜的水平， 完全说不过去的。
2. 彻底掌握Catalyst还有Dancer这两个框架。
3. 对于PHP， 因为基本上公司用的框架就在那里了， 希望在新的一年里能够在扎实下PHP代码编写的技巧。
4. 入职满两年的时候希望能够有底气跟manager说我想转到L2去。
5. 每天写技术博客， 或长或短， 记录下每天学到什么新的技术。 那样或许长进会更快点的。
6. 有不懂的刻苦钻研或者向同事请教。</p>

<p>好吧， 就写这么多了。 希望能好好审视下自己今天写下的这些东西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When Can We Omit the Ampersand While Calling a Subroutine]]></title>
    <link href="http://shpeacelover.github.io/blog/2014/01/07/when-can-we-omit-the-ampersand-while-calling-a-subroutine/"/>
    <updated>2014-01-07T16:39:30+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2014/01/07/when-can-we-omit-the-ampersand-while-calling-a-subroutine</id>
    <content type="html"><![CDATA[<p>If the compiler sees the subroutine definition before invocation, or if Perl can tell from the syntax that it’s a subroutine call, the subroutine can be called without an ampersand, just like a built-in function.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Useful Macos Commands]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/09/07/some-useful-macos-commands/"/>
    <updated>2013-09-07T19:51:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/09/07/some-useful-macos-commands</id>
    <content type="html"><![CDATA[<ol>
<li><p>在iterm2里， 输入“open -a Mou”打开Mou编辑器， 输入open example.md or open -a Mou example.md来打开一个文件。</p></li>
<li><p>在iterm2里， 按住cmd+enter， 将会将iterm2最大化。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎可妄想]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/09/05/zen-ke-wang-xiang/"/>
    <updated>2013-09-05T11:12:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/09/05/zen-ke-wang-xiang</id>
    <content type="html"><![CDATA[<p>一个人不成熟的标志， 或许就是， 有的东西明知不属于自己， 却还痴心妄想， 可笑， 可悲， 可叹.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[奇技淫巧之vim匹配括号]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/09/04/qi-ji-yin-qiao-zhi-vimpi-pei-gua-hao/"/>
    <updated>2013-09-04T10:52:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/09/04/qi-ji-yin-qiao-zhi-vimpi-pei-gua-hao</id>
    <content type="html"><![CDATA[<p>今日在和同事交接代码的时候， 因为代码比较长， 所以出现了在看到一个括号的时候， 不知道与它匹配的括号在哪里。 当时使用的是vim， 后来换成了sublime text， 但是还是不知道怎么去找括号的另一半。现在我们就来看看， 怎么在vim中去匹配括号的另一半。</p>

<p>首先把光标定位在一个括号上，在normal模式中, 按shift+5, 亦即%来自动调转到另一个括号上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Practical Vim --chap04 Visual Mode]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/28/practical-vim-chap04-visual-mode/"/>
    <updated>2013-08-28T15:38:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/28/practical-vim-chap04-visual-mode</id>
    <content type="html"><![CDATA[<ol>
<li><p>Vim’s Visual mode allows us to define a selection of text and then operate upon it.</p></li>
<li><p>ways to enabling visual modes:</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>v Enable character-wise Visual mode
</span><span class='line'>V Enable line-wise Visual mode
</span><span class='line'>&lt;C-v&gt; Enable block-wise Visual mode
</span><span class='line'>gv Reselect the last visual selection</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>the &lsquo;gv&rsquo; command isreselects the range of text that was last selected in Visual mode. No matter whether the previous selection was character-wise, line-wise, or block-wise, the gv command should do the right thing. The only case where it might get confused is if the last selection has since been deleted.</p></li>
<li><p>if there is a html tag, like &ldquo;<a href="#">three</a>&rdquo;, type vit in normal mode, will get you put your cursor into the &lsquo;h&rsquo; character of the word &ldquo;three&rdquo;. vit means &ldquo;visually select inside the tag&rdquo;</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Practical Vim --chap02 Normal Mode]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/28/practical-vim-chap02-normal-mode/"/>
    <updated>2013-08-28T14:43:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/28/practical-vim-chap02-normal-mode</id>
    <content type="html"><![CDATA[<ol>
<li><p>if there is a line and it is in normal mode, like &ldquo;hello, everyone, this is steven sun&rdquo;. now if you position your cursor on the &ldquo;s&rdquo; of &ldquo;steven sun&rdquo; and then type &ldquo;c2w&rdquo;, you will enter into the &ldquo;insert mode&rdquo; and will be prompted to enter some text.</p></li>
<li><p>use dap to delete a paragraph, use daw to  delete a  word, use dal to delete a  single character;</p></li>
<li><p>we can type :h operator to find those information about operators in vim.</p></li>
<li><p>an action is composed from an operator followed by a motion.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Network and Protocol Functions in PHP]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/28/network-and-protocol-functions-in-php/"/>
    <updated>2013-08-28T14:08:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/28/network-and-protocol-functions-in-php</id>
    <content type="html"><![CDATA[<ol>
<li><p>file_get_contents($url);</p></li>
<li><p>urlencode() function.This function takes a string and converts it to the proper format for an URL</p></li>
<li><p>parse_url($url)</p></li>
<li><p>gethostbyname</p></li>
<li><p>ftp_fget</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[忧郁的心情]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/24/you-yu-de-xin-qing/"/>
    <updated>2013-08-24T18:46:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/24/you-yu-de-xin-qing</id>
    <content type="html"><![CDATA[<p>忧郁， 毫无斗志。怎么好像每周都有那么会儿啊！要自强不息啊！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oop in PHP]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/23/oop-in-php/"/>
    <updated>2013-08-23T20:47:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/23/oop-in-php</id>
    <content type="html"><![CDATA[<p>1.&nbsp;define a class with function and parameters</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class classname
</span><span class='line'>    {
</span><span class='line'>    function operation1()
</span><span class='line'>    {
</span><span class='line'>    }
</span><span class='line'>    function operation2($param1, $param2)
</span><span class='line'>    {
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>2.&nbsp;constructor</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>class classname
</span><span class='line'>{
</span><span class='line'>  function __construct($param)
</span><span class='line'>  {
</span><span class='line'>    echo "Constructor called with parameter ".$param."&lt;br /&gt;";
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>$a = new classname("First");
</span><span class='line'>$b = new classname("Second");
</span><span class='line'>$c = new classname();
</span><span class='line'>?&gt;</span></code></pre></td></tr></table></div></figure>


<p>3.&nbsp;class attribute</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class classname
</span><span class='line'>{
</span><span class='line'>public $attribute;
</span><span class='line'>}
</span><span class='line'>$a = new classname();
</span><span class='line'>$a-&gt;attribute = "value";
</span><span class='line'>echo $a-&gt;attribute;</span></code></pre></td></tr></table></div></figure>


<p>4.&nbsp; When you use this keyword &ldquo;final&rdquo; in front of a function declaration, that function cannot be overridden in any subclasses</p>

<p>5.&nbsp; PHP use &ldquo;interface&rdquo; to implement the function of &ldquo;multi inheritance&rdquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>interface Displayable
</span><span class='line'>{
</span><span class='line'>    function display();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>class webPage implements Displayable
</span><span class='line'>{
</span><span class='line'>    function display()
</span><span class='line'>{
</span><span class='line'>// ...
</span><span class='line'>}
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Random Notes About Life and Work]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/21/some-random-notes-about-life-and-work/"/>
    <updated>2013-08-21T10:51:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/21/some-random-notes-about-life-and-work</id>
    <content type="html"><![CDATA[<p>Spent a lot of time last night and this morning to midify the theme of my blog to make it looks better without success.
What a shame!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Text Encoding and Transformation in PHP]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/19/text-encoding-and-transformation-in-php/"/>
    <updated>2013-08-19T19:36:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/19/text-encoding-and-transformation-in-php</id>
    <content type="html"><![CDATA[<p>GET: urlencode/rawurlencode</p>

<p>links: htmlspecialchars</p>

<p>SQL: addslashes/stripslashes</p>

<p>HTML: htmlentities, strip_tags, nl2br;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Vim Command Tips]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/17/useful-vim-command-tips/"/>
    <updated>2013-08-17T14:50:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/17/useful-vim-command-tips</id>
    <content type="html"><![CDATA[<p>ctrl+w+(w, h, j, k,l)</p>

<p>ctrl+b,</p>

<p>ctrl+w,</p>

<p>gg&nbsp;&nbsp;移到整份文件的最上方</p>

<p>G&nbsp;&nbsp;移到整份文件的最下方</p>

<p>H&nbsp;&nbsp;移动到当前屏幕的最上方</p>

<p>L&nbsp;&nbsp;移动到当前屏幕的最下方</p>

<p>ds&#8221;&nbsp;&nbsp;删除周围的双引号</p>

<p>cst&nbsp;&nbsp;删除周围的tag</p>

<p>yss&#8221;&nbsp;&nbsp;把整行加上双引号</p>

<p>:new&nbsp;&nbsp;建立水平视窗</p>

<p>:vnew&nbsp;&nbsp;建立垂直视窗</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎样把 Github上 的 Octopress Clone 到本地以及发布博客]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/05/zen-yang-ba-githubshang-de-octopress-clone-dao-ben-di-yi-ji-fa-bu-bo-ke/"/>
    <updated>2013-08-05T17:41:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/05/zen-yang-ba-githubshang-de-octopress-clone-dao-ben-di-yi-ji-fa-bu-bo-ke</id>
    <content type="html"><![CDATA[<p>力求精简， 步骤如下：
1. git clone -b source <a href="https://github.com/shpeacelover/shpeacelover.github.com">https://github.com/shpeacelover/shpeacelover.github.com</a> octopress
2. cd octopress
3. git clone <a href="https://github.com/shpeacelover/shpeacelover.github.com">https://github.com/shpeacelover/shpeacelover.github.com</a> _deploy
4. sudo gem install bundler
5. bundle install
6. rake new_post[&ldquo;The Title of Your Article&rdquo;]
7. bundle exec rake generate
8. bundle exec rake preview
9. bundle exec rake deploy
10. git add .
11. git commit -m &lsquo;your comment&rsquo;
12. git push origin source</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[反省]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/05/fan-sheng/"/>
    <updated>2013-08-05T17:27:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/05/fan-sheng</id>
    <content type="html"><![CDATA[<p>之前在学Django的时候， 觉得挺难的， 并不像网络上有的人所说的那样的简单。结果是没有坚持下来。</p>

<p>现在在学Ruby还有Ruby On Rails，觉得愈加的难了。 毕竟自己之前对于Python以及Django的了解要多于对Ruby和Rails的了解。</p>

<p>虽然如此， 但是自己也已经啃了这些硬骨头有段日子了。 虽然很多东西仍然不甚了解， 但是如果不坚持下去， 就会又是只知道个皮毛。 那就又等于浪费了很多宝贵的时间去做无用功了。</p>

<p>告诉自己，必须坚持下去， 多思考，多看书， 多编程。 会有结果的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[奋斗]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/08/05/fen-dou/"/>
    <updated>2013-08-05T17:13:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/08/05/fen-dou</id>
    <content type="html"><![CDATA[<p>偶尔的心灰意冷算得了什么？人生短短几十载，吃点苦， 受点累又怎样？ 如果年轻时不努力奋进，难道等到进了天堂后再去忏悔？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Country Road]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/07/23/country-road/"/>
    <updated>2013-07-23T21:20:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/07/23/country-road</id>
    <content type="html"><![CDATA[<p>Almost heaven, my hometown</p>

<p>To me as a child</p>

<p>Boundless  farmland</p>

<p>Smooth brook</p>

<p>Life is old there</p>

<p>Older than the trees</p>

<p>Younger than the mountains</p>

<p>Growin&#8217; like a breeze</p>

<p>Country Roads, take me home</p>

<p>To the place I belong</p>

<p>Like I never go beyond</p>

<p>Being innocent and having fun</p>

<p>(This is one I modified from John Denver&rsquo;s &ldquo;Take Me Home, Country Roads&rdquo; to reminisce my long passed childhood.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git常用命令]]></title>
    <link href="http://shpeacelover.github.io/blog/2013/07/23/gitchang-yong-ming-ling/"/>
    <updated>2013-07-23T18:55:00+08:00</updated>
    <id>http://shpeacelover.github.io/blog/2013/07/23/gitchang-yong-ming-ling</id>
    <content type="html"><![CDATA[<p>以下是自己常用到的git命令:</p>

<p>git init
git add .
git commit -a -m &lsquo;comment&rsquo;
git checkout .
git stauts
git remote add origin ssh://user@host/~/git/depot.git
git push origin master
git clone some-repository some-path
git clone &mdash;depth 50 some-repository
git add -u|&mdash;update
git add -A|&mdash;all
git commit -m &ldquo;Some message&rdquo; -a                 (****this will commit all modified files)</p>

<p>Unstage a modified file that’s been staged.
For example, to undo changes to cache.py, use this:
prompt> git reset HEAD &mdash; cache.py</p>

<p>Undo all uncommitted changes to a file.
prompt> git checkout &mdash; cache.py</p>

<p>git config credential.helper &lsquo;cache &mdash;timeout=3600&rsquo;
(the above will cache our password)</p>

<p>git brach new
git checkout new
git checkout -b new</p>

<p>to view all local branches:
git branch
to iew all remote branches:
git branch -r
to view all branches:
git branch -a
to view all that are or are not merged into the current branch :
git branch &mdash;merged
git branch &mdash;no-merged</p>

<p>Merge changes from development to the master branch:
git checkout master
git merge development</p>

<p>Merge changes, but don’t commit:
git merge &mdash;no-commit development</p>

<p>Add a one-line log message from each merged commit to the merge message:
git merge &mdash;log development</p>
]]></content>
  </entry>
  
</feed>
